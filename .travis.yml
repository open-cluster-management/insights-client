# Copyright Contributors to the Open Cluster Management project

os:
  - linux

language: go
go:
  - 1.15.x

services:
  - docker

addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: "Mkhnn3nG95bDBBHZaRn1VY6QX+q5IRlDyvtRFZhDhfQVulF5VTboY75uJCifQl093OfyPGJOarwK+2BQbhlfsZuGJMRHICc5qqPpj4SUWMIq8jRSr+zUEqrqgR2Q1QSb8XFPJl9v2WUPg4PyUY7GfgFAOi40rkyvarphjCQb6EIVGNvPHXIh6N+hopZ6mlnE3H7vzHBT9yE9DWS8NKg7KncXTNF/CoBwoWxL24V+aSMSknRpUE6EZRGjbyZzxYf8De3dnoNVlB21e1UMtzc0owG3xYxNsDgv7Las7FXM2LRy50uX7/Awhsj5CtZWDYwX/aA5RilNcE0Nw/WtKln/ylpnxG3GrBWPOCUxGcIEG4yT/6+pid7Q9ggQQVItOToDCYgJo3qvtnfPRqWTwRBoWon6B0d84RE0d+DWhSWl54SrOGV2KyZoXaKVxYZOkVONMl0qUc1rU789Nu/uALQErzDYbb0Z2MPxUmrwVRQV1NLTdbIlJaaRLSFMoL6r1H4SAkkNa43HVarK42kyaOi8LAa0qWgc0hb3ejUsw2IQCPEJ+FlQzv+j1iDwzbZm7BnIH3NK3+ix7J7usYemePuWLWvUjschFV8qL8kMU0hFLwMwSFawE8FFJqSSLmsp8B5oMsfUSiIvNvLKaxENjMOFI0WG4nCQGL5ITpS/5bBEAqY="

branches:
  only:
    - main
    - /^release-[0-9]+\..*$/

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"

    # Component Specific
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/build/deploy-to-cluster.sh
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/build/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/build/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-unit-tests.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-e2e-tests.sh

stages:
  - build
  - unit-test
  - test-e2e
  - release-ff
  - publish

before_script:
  # Bootstrap the build harness.
  - make
  # Set the image tag differently for PRs.
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;


jobs:
  include:
    - stage: build
      name: "Build the image and run unit tests"
      script:
        - make component/build
        - make component/push
    - stage: unit-test
      name: "Run unit tests"
      script:
        # Bootstrap the build harness, pull test image, and run unit tests.  
        - make component/test/unit
        - make security/scans
        - make sonar/go  

    - stage: release-ff
      name: "Push commits to current release branch"
      if: type = push AND branch =~ /^main$/
      script:
        - make release-ff

    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
