os:
  - linux

language: go
go:
  - 1.15.x

services:
  - docker

addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: "FzxghAaLZvjSDyjrCjurKSZZXNuNre8rkUPKbZoAlp7ha4sOtySVPQGrJIErqmKc/H2S+GJNQ9SxWQuIBGss6Tqcqh9QKGWj0zmlJWxpG3WuCeq53aChr7fmR/bpDnPQfv0kiRfImaIejBvH5xMPq7l/Z/5bpmZ/6kaGMpibtoaJl3o88wKTpzdtoUepLKSrl89bzkk93xfIq3wT+oxskG+312tXmy02hDfJZK8gIiqvzvzcbvJRvwTArPgiaep77F7DCyS1guaKmfTCcL/La+f3yWDh+olS1Z+JNfpItLqe3uehw9MxHi1WbTHmNh7uNFC3/3gMe4rI/SGsO/wReyHD9Cg9nweFpj7L/ytjQUuZaCthfWuovZ5LM9yPV2BFEF+d6VaquKrpl97sjMSdoen/olx428OFKVRupQUfk5ZYGOpgUBiCcdxq8DmbI4hOvvx3pDdXrdoSkAFzS3wVQB9jjaGccu72yWK2zn3DEC497WUAQ7VesqY9NIb5jGl5RVZIdbcac3cBXVerj6iVpAEj4pbyKkmjouY7RaR1ocVvEwBo0Af2TmPvu8gAeMKRe42Y123cb4mhcbgfH7FaFhZpgGR8VVH/AQi5y7gx+/QxHzv4N42QNAraL80anUFn7oPPtXlvIsHqtYTA8VObHfEPVRZOIVPSS4xLnSk54UA="

branches:
  only:
    - main
    - /^release-[0-9]+\..*$/

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"

    # Component Specific
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/build/deploy-to-cluster.sh
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/build/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/build/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-unit-tests.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-e2e-tests.sh
    - GO111MODULE=on

stages:
  - build
  - unit-test
  - test-e2e
  - release-ff
  - publish

before_script:
  # Bootstrap the build harness.
  - make
  # Set the image tag differently for PRs.
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
  # Use ssh to pull from private repos.
  - git config --global url."git@github.com:".insteadOf "https://github.com/"


jobs:
  include:
    - stage: build
      name: "Build the image and run unit tests"
      script:
        - make component/build
        - make component/push
    - stage: unit-test
      name: "Run unit tests"
      script:
        # Bootstrap the build harness, pull test image, and run unit tests.  
        - make copyright-check
        # - make component/pull 
        - make component/test/unit
        - make security/scans
        - make sonar/go  

    - stage: release-ff
      name: "Push commits to current release branch"
      if: type = push AND branch =~ /^main$/
      script:
        - make
        - make release-ff

    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
